"""
Django settings for backenda project.

Generated by 'django-admin startproject' using Django 1.9.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
import sys
import dj_database_url
import re
from kombu import Queue, Exchange

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'a8&7=502e!+0up*^2=gyus%75%jera35+otd0!w@s6tdqg#7w-'

ALLOWED_HOSTS = ['127.0.0.1', '.herokuapp.com', '.clikhome.com', '.apartmentocean.com']


# Application definition

INSTALLED_APPS = [
    'dal',
    'dal_select2',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.sites',
    'django.contrib.staticfiles',
    'djcelery',
    'corsheaders',
    'django_extensions',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_auth',
    's3direct',
    'raven.contrib.django.raven_compat',
    'authentication',
    'employee',
    'extended_choices',
    'db_logging',
    'billing',
    'support',
    'bridge'
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'index.middleware.SSLMiddleware',
    'authentication.middleware.AuthenticationStatusInCookiesMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'db_logging.middleware.DBLoggingMiddleware'
]

ROOT_URLCONF = 'urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'frontend/dist/'),
                 os.path.join(BASE_DIR, 'backend/templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.debug',
                'django.template.context_processors.i18n',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
                'django.template.context_processors.tz',
                'django.contrib.messages.context_processors.messages',
                'django.core.context_processors.request'
            ],
            'libraries': {
                'staticfiles': 'django.templatetags.static',
                'i18n': 'django.templatetags.i18n',
            },
        },
    },
]

# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.config(conn_max_age=500)
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'
CELERY_TIMEZONE = TIME_ZONE = 'America/Belize'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'frontend/dist/static')]


SITE_ID = 1

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny'
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
    ),
    # 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    # 'PAGE_SIZE': 25
}

REST_AUTH_SERIALIZERS = {
    'USER_DETAILS_SERIALIZER': 'authentication.serializers.UserDetailsSerializer',
    'TOKEN_SERIALIZER': 'authentication.serializers.TokenSerializer',
    'PASSWORD_RESET_CONFIRM_SERIALIZER': 'authentication.serializers.PasswordResetConfirmSerializer',
}

AUTH_USER_MODEL = 'authentication.Account'

CORS_ALLOW_CREDENTIALS = True
# CORS_ORIGIN_WHITELIST = {}

IGNORABLE_404_URLS = (
    re.compile(r'^/apple-touch-icon.*\.png$'),
    re.compile(r'^/favicon\.ico$'),
    re.compile(r'^/robots\.txt$'),
)

DEFAULT_FROM_EMAIL = EMAIL_FROM = 'robot@clikhome.com'
EMAIL_SUBJECT = 'CLIKHOME BOT'
EMAIL_HOST_USER = os.environ.get('SENDGRID_USERNAME', 'app47632078@heroku.com')
EMAIL_HOST= 'smtp.sendgrid.net'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_PASSWORD = os.environ.get('SENDGRID_PASSWORD', 'mi2eomdr4442')

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'stream': sys.stdout
        },
        'database': {
            'level': 'DEBUG',
            'class': 'db_logging.handler.DBLoggingHandler'
        }
    },
    'loggers': {
        'user': {
            'handlers': ['database'],
            'level': 'DEBUG'
        }
    }
}


# TODO: Make difference storages for loca/production/developement forks.
AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY', 'FDQ6zhGPUZNZ6I7uyHo+98W9eZQ9aHKgFZG3RS0a')
AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID', 'AKIAJ7V5TYLS2PTCOFCQ')
AWS_STORAGE_BUCKET_NAME = 'clikhome-hr'

S3DIRECT_DESTINATIONS = {
    'invoices': (
        'invoices',
        lambda u: u.is_staff,
        '*')
}

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'authentication.backend.AuthByModelBackend'
]

DEBUG = os.environ.get('DJANGO_DEBUG', False)

import djcelery
djcelery.setup_loader()

BROKER_URL = os.environ.get('REDISCLOUD_URL', 'redis://127.0.0.1:6379')
CELERY_RESULT_BACKEND = 'redis'
CELERY_IGNORE_RESULT = False
CELERY_TASK_RESULT_EXPIRES = 151200 # 2 Days

CELERY_ACCEPT_CONTENT = ['json',]
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_SEND_TASK_ERROR_EMAILS = True
CELERY_SEND_EVENTS = True

CELERY_DEFAULT_QUEUE = 'hr_admin'
CELERY_QUEUES = (
    Queue('hr_admin', routing_key='hr_admin'),
    Queue('main_site', routing_key='main_site'),
)

ADMINS = (
    ('Constantin Slednev', 'c.slednev@gmail.com'),
)


try:
    from local_settings import *
except ImportError:
    pass